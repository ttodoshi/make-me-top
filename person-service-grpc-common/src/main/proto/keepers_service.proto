syntax = "proto3";

package org.example.grpc;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "people_service.proto";

option java_package = "org.example.grpc";

service KeeperService {
  rpc findKeeperById(KeeperByIdRequest) returns (Keeper) {
  }
  rpc findKeepersByPersonId(KeepersByPersonIdRequest) returns (KeeperList) {
  }
  rpc findKeeperByPersonIdAndCourseId(KeeperByPersonIdAndCourseIdRequest) returns (Keeper) {
  }
  rpc findKeepersByCourseId(KeepersByCourseIdRequest) returns (KeeperList) {
  }
  rpc findAllKeepers(google.protobuf.Empty) returns (AllKeepersResponse) {
  }
  rpc findKeepersByKeeperIdIn(KeepersByKeeperIdInRequest) returns (KeepersByKeeperIdInResponse) {
  }
  rpc findKeepersByPersonIdIn(KeepersByPersonIdInRequest) returns (KeepersByPersonIdInResponse) {
  }
  rpc findKeepersByPersonIdAndCourseIdIn(KeepersByPersonIdAndCourseIdInRequest) returns (KeepersByPersonIdAndCourseIdInResponse) {
  }
}

message KeeperByIdRequest {
  int32 keeperId = 1;
}

message KeepersByPersonIdRequest {
  int32 personId = 1;
}

message KeeperByPersonIdAndCourseIdRequest {
  int32 personId = 1;
  int32 courseId = 2;
}

message KeepersByCourseIdRequest {
  int32 courseId = 1;
}

message AllKeepersResponse {
  message KeeperList {
    repeated PersonWithRating person = 1;
  }
  map<int32, KeeperList> keepersWithCourseIdMap = 1;
}

message KeepersByKeeperIdInRequest {
  repeated int32 keeperIds = 1;
}

message KeepersByKeeperIdInResponse {
  map<int32, Keeper> keeperByKeeperIdMap = 1;
}

message KeepersByPersonIdInRequest {
  repeated int32 personIds = 1;
}

message KeepersByPersonIdInResponse {
  map<int32, KeeperList> keepersByPersonIdMap = 1;
}

message KeepersByPersonIdAndCourseIdInRequest {
  int32 personId = 1;
  repeated int32 courseIds = 2;
}

message KeepersByPersonIdAndCourseIdInResponse {
  map<int32, Keeper> keeperWithCourseIdMap = 1;
}

message Keeper {
  int32 keeperId = 1;
  int32 courseId = 2;
  int32 personId = 3;
  google.protobuf.Timestamp startDate = 4;
}

message KeeperList {
  repeated Keeper keepers = 1;
}
