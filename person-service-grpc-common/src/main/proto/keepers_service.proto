syntax = "proto3";

package org.example.grpc;

import "google/protobuf/timestamp.proto";
import "people_service.proto";

option java_package = "org.example.grpc";

service KeeperService {
  rpc findKeeperById(KeeperByIdRequest) returns (Keeper) {
  }
  rpc findKeepersByPersonId(KeepersByPersonIdRequest) returns (KeeperList) {
  }
  rpc findKeeperByPersonIdAndCourseId(KeeperByPersonIdAndCourseIdRequest) returns (Keeper) {
  }
  rpc findKeepersByCourseId(KeepersByCourseIdRequest) returns (KeeperList) {
  }
  rpc findKeepersByKeeperIdIn(KeepersByKeeperIdInRequest) returns (KeepersByKeeperIdInResponse) {
  }
  rpc findKeepersPeopleByCourseIdIn(KeepersByCourseIdInRequest) returns (KeepersPeopleByCourseIdInResponse) {
  }
  rpc findKeepersByPersonIdIn(KeepersByPersonIdInRequest) returns (KeepersByPersonIdInResponse) {
  }
  rpc findKeepersByPersonIdAndCourseIdIn(KeepersByPersonIdAndCourseIdInRequest) returns (KeepersByPersonIdAndCourseIdInResponse) {
  }
  rpc existsKeeperByPersonIdAndCourseId(KeeperByPersonIdAndCourseIdRequest) returns(KeeperExistsResponse){
  }
}

message KeeperByIdRequest {
  int64 keeperId = 1;
}

message KeepersByPersonIdRequest {
  int64 personId = 1;
}

message KeeperByPersonIdAndCourseIdRequest {
  int64 personId = 1;
  int64 courseId = 2;
}

message KeepersByCourseIdRequest {
  int64 courseId = 1;
}

message KeepersPeopleByCourseIdInResponse {
  message KeeperList {
    repeated PersonWithRating person = 1;
  }
  map<int64, KeeperList> keepersWithCourseIdMap = 1;
}

message KeepersByKeeperIdInRequest {
  repeated int64 keeperIds = 1;
}

message KeepersByCourseIdInRequest {
  repeated int64 courseIds = 1;
}

message KeepersByKeeperIdInResponse {
  map<int64, Keeper> keeperByKeeperIdMap = 1;
}

message KeepersByPersonIdInRequest {
  repeated int64 personIds = 1;
}

message KeepersByPersonIdInResponse {
  map<int64, KeeperList> keepersByPersonIdMap = 1;
}

message KeepersByPersonIdAndCourseIdInRequest {
  int64 personId = 1;
  repeated int64 courseIds = 2;
}

message KeepersByPersonIdAndCourseIdInResponse {
  map<int64, Keeper> keeperWithCourseIdMap = 1;
}

message Keeper {
  int64 keeperId = 1;
  int64 courseId = 2;
  int64 personId = 3;
  google.protobuf.Timestamp startDate = 4;
}

message KeeperList {
  repeated Keeper keepers = 1;
}

message KeeperExistsResponse{
  bool keeperExists = 1;
}