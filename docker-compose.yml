version: '3.5'

services:
  wiremock:
    container_name: wiremock_container
    image: rodolpheche/wiremock
    ports:
      - "8083:8080"
    networks:
      postgres:
        ipv4_address: 10.10.0.15

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_DB: mmt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - .:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      postgres:
        ipv4_address: 10.10.0.14
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: test@mail.ru
      PGADMIN_DEFAULT_PASSWORD: pass
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "8081:80"
    networks:
      postgres:
        ipv4_address: 10.10.0.13
    restart: unless-stopped
  app_galaxy:
    container_name: app_galaxy_container
    build: ./galaxy-service
    ports:
      - "8101:8101"
    depends_on:
      - postgres
    networks:
      postgres:
        ipv4_address: 10.10.0.8
  app_planet:
    container_name: app_planet_container
    build: ./planet-service
    ports:
      - "8102:8102"
    depends_on:
      - postgres
    networks:
      postgres:
        ipv4_address: 10.10.0.7
  app_auth:
    container_name: app_auth_container
    build: ./auth-service
    ports:
      - "8103:8103"
    depends_on:
      - postgres
    networks:
      postgres:
        ipv4_address: 10.10.0.6
  nginx:
    image: nginx
    ports:
      - "4401:4401"
    volumes:
      - ./mmt-nginx.conf:/etc/nginx/nginx.conf
    networks:
      postgres:
        ipv4_address: 10.10.0.3


networks:
  postgres:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/16

volumes:
  postgres:
  pgadmin:
