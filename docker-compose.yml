version: '3.5'

services:
  wiremock:
    container_name: wiremock
    image: rodolpheche/wiremock
    ports:
      - "8083:8080"
    volumes:
      - ./.wiremock/wwe-server:/home/wiremock
    networks:
      make-me-top:
        ipv4_address: 10.10.0.15

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      make-me-top:
        ipv4_address: 10.10.0.2

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      make-me-top:
        ipv4_address: 10.10.0.16

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_MULTIPLE_DATABASES: galaxy_db,planet_db,person_db,auth_db,course_db,course_registration_db,homework_db,progress_db,feedback_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - .:/docker-entrypoint-initdb.d
    depends_on:
      - kafka
    command: postgres -c 'max_connections=1000'
    ports:
      - "5432:5432"
    networks:
      make-me-top:
        ipv4_address: 10.10.0.14
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: test@mail.ru
      PGADMIN_DEFAULT_PASSWORD: pass
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "8081:80"
    networks:
      make-me-top:
        ipv4_address: 10.10.0.13
    restart: unless-stopped

  discovery-server:
    container_name: discovery-server
    build: ./discovery-service
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.12

  person-service:
    container_name: person-service
    build: ./person-service
    ports:
      - "8104:8104"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8104/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      discovery-server:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.19

  picture-service:
    container_name: picture-service
    build: ./picture-service
    ports:
      - "8108:8108"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8108/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      auth-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    volumes:
      - pics:/app/pics
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.17

  galaxy-service:
    container_name: galaxy-service
    build: ./galaxy-service
    ports:
      - "8101:8101"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8101/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      picture-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.8
  planet-service:
    container_name: planet-service
    build: ./planet-service
    ports:
      - "8102:8102"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8102/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      galaxy-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.7

  auth-service:
    container_name: auth-service
    build: ./auth-service
    ports:
      - "8103:8103"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8103/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      person-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.6

  course-service:
    container_name: course-service
    build: ./course-service
    ports:
      - "8106:8106"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8106/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      planet-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.9

  course_registration-service:
    container_name: course_registration-service
    build: ./course-registration-service
    ports:
      - "8105:8105"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8105/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      course-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.10

  homework-service:
    container_name: homework-service
    build: ./homework-service
    ports:
      - "8107:8107"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8107/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      course_registration-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.18

  progress-service:
    container_name: progress-service
    build: ./progress-service
    ports:
      - "8109:8109"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8109/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      homework-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.20

  feedback-service:
    container_name: feedback-service
    build: ./feedback-service
    ports:
      - "8110:8110"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8110/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      progress-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.21

  gateway:
    container_name: gateway
    build: ./gateway-service
    ports:
      - "4401:4401"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:4401/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      feedback-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    deploy:
      resources:
        limits:
          memory: 500M
    networks:
      make-me-top:
        ipv4_address: 10.10.0.3

networks:
  make-me-top:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/16

volumes:
  postgres:
  pgadmin:
  pics:
