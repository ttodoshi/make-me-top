version: '3.5'

services:
  wiremock:
    container_name: wiremock_container
    image: rodolpheche/wiremock
    ports:
      - "8083:8080"
    volumes:
      - ./.wiremock/wwe-server:/home/wiremock
    networks:
      postgres:
        ipv4_address: 10.10.0.15

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      postgres:
        ipv4_address: 10.10.0.2

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      postgres:
        ipv4_address: 10.10.0.16

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_DB: mmt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - .:/docker-entrypoint-initdb.d
    depends_on:
      - kafka
    ports:
      - "5432:5432"
    networks:
      postgres:
        ipv4_address: 10.10.0.14
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: test@mail.ru
      PGADMIN_DEFAULT_PASSWORD: pass
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "8081:80"
    networks:
      postgres:
        ipv4_address: 10.10.0.13
    restart: unless-stopped

  app_galaxy:
    container_name: app_galaxy_container
    build: ./galaxy-service
    ports:
      - "8101:8101"
    depends_on:
      - postgres
    volumes:
      - ./.logs/galaxy-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.8
  app_planet:
    container_name: app_planet_container
    build: ./planet-service
    ports:
      - "8102:8102"
    depends_on:
      - postgres
    volumes:
      - ./.logs/planet-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.7

  app_auth:
    container_name: app_auth_container
    build: ./auth-service
    ports:
      - "8103:8103"
    depends_on:
      - postgres
    volumes:
      - ./.logs/auth-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.6

  app_course:
    container_name: app_course_container
    build: ./course-service
    ports:
      - "8106:8106"
    depends_on:
      - postgres
    volumes:
      - ./.logs/course-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.9

  app_person_information:
    container_name: app_person_information_container
    build: ./person-information-service
    ports:
      - "8107:8107"
    depends_on:
      - postgres
    volumes:
      - ./.logs/person-information-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.10
  app_explorer_personal_cabinet:
    container_name: app_explorer_personal_cabinet_container
    build: ./explorer-personal-cabinet-service
    ports:
      - "8104:8104"
    depends_on:
      - postgres
    volumes:
      - ./.logs/explorer-cabinet-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.5
  app_keeper_personal_cabinet:
    container_name: app_keeper_personal_cabinet_container
    build: ./keeper-personal-cabinet-service
    ports:
      - "8105:8105"
    depends_on:
      - postgres
    volumes:
      - ./.logs/keeper-cabinet-service/:/app/logs/
    env_file:
      - .env
    networks:
      postgres:
        ipv4_address: 10.10.0.4

  nginx:
    image: nginx
    ports:
      - "4401:4401"
    volumes:
      - ./mmt-nginx.conf:/etc/nginx/nginx.conf
    networks:
      postgres:
        ipv4_address: 10.10.0.3

networks:
  postgres:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/16

volumes:
  postgres:
  pgadmin:
